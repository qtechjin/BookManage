package com.xiaomi.example.dal.dao.impl;

import com.xiaomi.example.dal.dao.UserDAO;
import com.xiaomi.example.dal.dataobject.UserDO;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserDAOImpl extends SqlMapClientDaoSupport implements UserDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public UserDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public int deleteByPrimaryKey(Integer userId) {
        UserDO key = new UserDO();
        key.setUserId(userId);
        int rows = getSqlMapClientTemplate().delete("tb_user_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public Integer insert(UserDO record) {
        Object newKey = 0;
        try{
            newKey = getSqlMapClientTemplate().insert("tb_user_insert", record);
        } catch (Exception e){
            e.printStackTrace();
        } finally {
            return (Integer) newKey;
        }
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public Integer insertSelective(UserDO record) {
        Object newKey = getSqlMapClientTemplate().insert("tb_user_insertSelective", record);
        return (Integer) newKey;
    }


    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public UserDO selectByPrimaryKey(Integer userId) {
        UserDO key = new UserDO();
        key.setUserId(userId);
        UserDO record = (UserDO) getSqlMapClientTemplate().queryForObject("tb_user_selectByPrimaryKey", key);
        return record;
    }


    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public int updateByPrimaryKeySelective(UserDO record) {
        int rows = getSqlMapClientTemplate().update("tb_user_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_user
     *
     * @ibatorgenerated Tue Feb 28 18:27:05 CST 2017
     */
    public int updateByPrimaryKey(UserDO record) {
        int rows = getSqlMapClientTemplate().update("tb_user_updateByPrimaryKey", record);
        return rows;
    }

    public List selectByUserNames(List userNames) {
        return getSqlMapClientTemplate().queryForList("tb_user_selectByUserNames", userNames);
    }

    public Long insertBatch(List users) {
        return Long.valueOf( getSqlMapClientTemplate().update("tb_user_insertBatch", users) );
    }

    public UserDO selectByUserName(String userName) {
        System.out.println("正在查找:" + userName);
        Map params = new HashMap();
        params.put("userName", userName);
        return (UserDO) getSqlMapClientTemplate().queryForObject("tb_user_selectByUserName", userName);
    }

    public UserDO selectByNameAndEmail(String userName, String email) {
        System.out.println("正在查找:" + userName);
        Map params = new HashMap();
        params.put("userName", userName);
        params.put("email", email);
        return (UserDO) getSqlMapClientTemplate().queryForObject("tb_user_selectByNameAndEmail", params);
    }


}